name: test
on: [push, pull_request]


jobs:
  build_matrix:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - id: set-matrix
        run: echo "::set-output name=matrix::$(find * -type f -name build.yml | xargs dirname | sort | uniq | jq --raw-input . | jq -c --slurp .)"
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

  build:
    needs: build_matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: ${{ fromJson(needs.build_matrix.outputs.matrix) }}

    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v1
        id: buildx
        with:
          install: true
      - name: Store image tag
        run: echo "IMAGE_TAG=ghcr.io/${{ github.repository }}:cache-latest-${{matrix.project}}" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USER }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Pull existing image if exists
        run: docker pull ${{ env.IMAGE_TAG }} || true
      - name: Build
        run: |
          touch .env # Create dummy env file
          cd ${{matrix.project}}
          docker buildx bake -f build.yml  --set node_1.tags={{ env.IMAGE_TAG }} --push
